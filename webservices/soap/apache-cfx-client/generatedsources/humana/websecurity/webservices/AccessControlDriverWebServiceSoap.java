package humana.websecurity.webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.4
 * 2015-07-29T16:59:43.855-07:00
 * Generated source version: 3.0.4
 * 
 */
@WebService(targetNamespace = "urn:Humana:WebSecurity:WebServices", name = "AccessControlDriverWebServiceSoap")
@XmlSeeAlso({ObjectFactory.class, humana.websecurity.sl.webservice.messagetypes.ObjectFactory.class})
public interface AccessControlDriverWebServiceSoap {

    /**
     * This method obtains the demographic data for organization
     */
    @WebMethod(operationName = "GetDemographicsForEntityEx", action = "urn:Humana:WebSecurity:WebServices/GetDemographicsForEntityEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetDemographicsForEntityExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetDemographicsForEntityExResponse getDemographicsForEntityEx(
        @WebParam(partName = "parameters", name = "GetDemographicsForEntityEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetDemographicsForEntityEx parameters
    );

    /**
     * This web method is simular to the method 'GetACLFunctionsForUser' in that it supplies the same level 1, level 2 and level 3 information. However, it expands the reply to include level 4 information which represents data (Access Identifiers) for each function. In addition to being able to limit the reply data by Entity, Portal, or System Application, you can futher limit the reply to data about just one function.
     */
    @WebMethod(operationName = "GetACLFunctionWithAccessIdsForUser", action = "urn:Humana:WebSecurity:WebServices/GetACLFunctionWithAccessIdsForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLFunctionWithAccessIdsForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLFunctionWithAccessIdsForUserResponse getACLFunctionWithAccessIdsForUser(
        @WebParam(partName = "parameters", name = "GetACLFunctionWithAccessIdsForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLFunctionWithAccessIdsForUser parameters
    );

    /**
     * Provides Aka Name for a specific sessionID.
     */
    @WebMethod(operationName = "GetAKANameBySessionID", action = "urn:Humana:WebSecurity:WebServices/GetAKANameBySessionID")
    @RequestWrapper(localName = "GetAKANameBySessionID", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAKANameBySessionID")
    @ResponseWrapper(localName = "GetAKANameBySessionIDResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAKANameBySessionIDResponse")
    @WebResult(name = "GetAKANameBySessionIDResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.Session getAKANameBySessionID(
        @WebParam(name = "sessionID", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionID
    );

    /**
     * This method provides a way to locate what organizations are assocaited with a given Access Identifier. When using this method, be prepared to handle a list of organizations. Do not assume you will only get one.
     */
    @WebMethod(operationName = "GetEntityFromAssignedAccessId", action = "urn:Humana:WebSecurity:WebServices/GetEntityFromAssignedAccessId")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetEntityFromAssignedAccessIdResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetEntityFromAssignedAccessIdResponse getEntityFromAssignedAccessId(
        @WebParam(partName = "parameters", name = "GetEntityFromAssignedAccessId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetEntityFromAssignedAccessId parameters
    );

    /**
     * Retrieves User ID for the given akaName
     */
    @WebMethod(operationName = "GetUserFromAkaName", action = "urn:Humana:WebSecurity:WebServices/GetUserFromAkaName")
    @RequestWrapper(localName = "GetUserFromAkaName", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserFromAkaName")
    @ResponseWrapper(localName = "GetUserFromAkaNameResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserFromAkaNameResponse")
    @WebResult(name = "GetUserFromAkaNameResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetUserFromAkaNameResponse.GetUserFromAkaNameResult getUserFromAkaName(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName
    );

    /**
     * This method returns menu template information for a given user. The reply information can be limited by Orginization, Portal, System Application or Menu Template.
     */
    @WebMethod(operationName = "GetACLMenusForUser", action = "urn:Humana:WebSecurity:WebServices/GetACLMenusForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLMenusForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLMenusForUserResponse getACLMenusForUser(
        @WebParam(partName = "parameters", name = "GetACLMenusForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLMenusForUser parameters
    );

    /**
     * Retrieves Controlling Authorities for the given entityGenKey
     */
    @WebMethod(operationName = "GetEntityControllingAuthorities", action = "urn:Humana:WebSecurity:WebServices/GetEntityControllingAuthorities")
    @RequestWrapper(localName = "GetEntityControllingAuthorities", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetEntityControllingAuthorities")
    @ResponseWrapper(localName = "GetEntityControllingAuthoritiesResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetEntityControllingAuthoritiesResponse")
    @WebResult(name = "GetEntityControllingAuthoritiesResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetEntityControllingAuthoritiesResponse.GetEntityControllingAuthoritiesResult getEntityControllingAuthorities(
        @WebParam(name = "entityGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int entityGenKey
    );

    /**
     * List Menu Templates for OriginGenKey and AkaName in XML format
     */
    @WebMethod(operationName = "GetUserMenusXML", action = "urn:Humana:WebSecurity:WebServices/GetUserMenusXML")
    @RequestWrapper(localName = "GetUserMenusXML", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserMenusXML")
    @ResponseWrapper(localName = "GetUserMenusXMLResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserMenusXMLResponse")
    @WebResult(name = "GetUserMenusXMLResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public java.lang.String getUserMenusXML(
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey,
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "menuLevel", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuLevel,
        @WebParam(name = "menuGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuGenKey,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.
     */
    @WebMethod(operationName = "IsUserAuthorizedBool", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedBool")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "IsUserAuthorizedBoolResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public IsUserAuthorizedBoolResponse isUserAuthorizedBool(
        @WebParam(partName = "parameters", name = "IsUserAuthorizedBool", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        IsUserAuthorizedBool parameters
    );

    /**
     * This method will provide a list of users that have a current association with an organization. Please NOTE: It does not return a user whose access has been revoked. Possible options for entityUserTypeCode are : All,PAA,AA, OA,
     */
    @WebMethod(operationName = "GetActiveUsersForEntityEx", action = "urn:Humana:WebSecurity:WebServices/GetActiveUsersForEntityEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetActiveUsersForEntityExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetActiveUsersForEntityExResponse getActiveUsersForEntityEx(
        @WebParam(partName = "parameters", name = "GetActiveUsersForEntityEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetActiveUsersForEntityEx parameters
    );

    /**
     * This method will return all attributes that have been assigned to an entity user. An entity user represents a relationship between a user and an organization. At the current time some of the Secured Logons installations have implemented entity user attributes, and others have not. An example of an entity user attribute would be TSO_ID.
     */
    @WebMethod(operationName = "GetAttributesForEntityUserEx", action = "urn:Humana:WebSecurity:WebServices/GetAttributesForEntityUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetAttributesForEntityUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetAttributesForEntityUserExResponse getAttributesForEntityUserEx(
        @WebParam(partName = "parameters", name = "GetAttributesForEntityUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetAttributesForEntityUserEx parameters
    );

    /**
     * List SystemApplication for the SystemApplicationID
     */
    @WebMethod(operationName = "GetSystemApplicationRow", action = "urn:Humana:WebSecurity:WebServices/GetSystemApplicationRow")
    @RequestWrapper(localName = "GetSystemApplicationRow", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSystemApplicationRow")
    @ResponseWrapper(localName = "GetSystemApplicationRowResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSystemApplicationRowResponse")
    @WebResult(name = "GetSystemApplicationRowResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetSystemApplicationRowResponse.GetSystemApplicationRowResult getSystemApplicationRow(
        @WebParam(name = "systemApplicationId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int systemApplicationId
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOriginApplicationNameEAPM ID
     */
    @WebMethod(operationName = "IsUserAuthorizedBoolWithLoggingEx", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedBoolWithLoggingEx")
    @RequestWrapper(localName = "IsUserAuthorizedBoolWithLoggingEx", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.IsUserAuthorizedBoolWithLoggingEx")
    @ResponseWrapper(localName = "IsUserAuthorizedBoolWithLoggingExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.IsUserAuthorizedBoolWithLoggingExResponse")
    @WebResult(name = "IsUserAuthorizedBoolWithLoggingExResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public boolean isUserAuthorizedBoolWithLoggingEx(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "key", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String key,
        @WebParam(name = "keyType", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String keyType,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId,
        @WebParam(name = "applicationName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String applicationName,
        @WebParam(name = "eampId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int eampId
    );

    /**
     * This method is simular to 'GetOrganizationListForUser'. The difference is that with this method you can limit the organizations lists by including a menu template or business function in your request. When that is done, the reply set will only include organizations that have given this user permission to perform that business function or menu template.Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOrigin
     */
    @WebMethod(operationName = "GetOrgListQualifiedForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetOrgListQualifiedForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetOrgListQualifiedForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetOrgListQualifiedForUserExResponse getOrgListQualifiedForUserEx(
        @WebParam(partName = "parameters", name = "GetOrgListQualifiedForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetOrgListQualifiedForUserEx parameters
    );

    /**
     * This method will provide a list of organizations that have a an association with this user. Please NOTE: It does not return an organization if they have revoked this user's access.
     */
    @WebMethod(operationName = "GetOrganizationListForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetOrganizationListForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetOrganizationListForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetOrganizationListForUserExResponse getOrganizationListForUserEx(
        @WebParam(partName = "parameters", name = "GetOrganizationListForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetOrganizationListForUserEx parameters
    );

    /**
     * This method provides a list of functions that belong to a single System Application.
     */
    @WebMethod(operationName = "GetFunctionListForSystemApplicationEx", action = "urn:Humana:WebSecurity:WebServices/GetFunctionListForSystemApplicationEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetFunctionListForSystemApplicationExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetFunctionListForSystemApplicationExResponse getFunctionListForSystemApplicationEx(
        @WebParam(partName = "parameters", name = "GetFunctionListForSystemApplicationEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetFunctionListForSystemApplicationEx parameters
    );

    /**
     * This method will return all attributes that have been assigned to an entity user. An entity user represents a relationship between a user and an organization. At the current time some of the Secured Logons installations have implemented entity user attributes, and others have not. An example of an entity user attribute would be TSO_ID.
     */
    @WebMethod(operationName = "GetAttributesForEntityUser", action = "urn:Humana:WebSecurity:WebServices/GetAttributesForEntityUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetAttributesForEntityUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetAttributesForEntityUserResponse getAttributesForEntityUser(
        @WebParam(partName = "parameters", name = "GetAttributesForEntityUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetAttributesForEntityUser parameters
    );

    /**
     * Get User DTO
     */
    @WebMethod(operationName = "GetUserDTO", action = "urn:Humana:WebSecurity:WebServices/GetUserDTO")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserDTOResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserDTOResponse getUserDTO(
        @WebParam(partName = "parameters", name = "GetUserDTO", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserDTO parameters
    );

    /**
     * This method is used to obtain a list of user attributes. Within our current implementation, there are no user attributes currently being stored in the Secured Logons database. As a result, this method will always return zero attributes. If any attributes are ever added to the Secured Logons database, this method would return them.
     */
    @WebMethod(operationName = "GetAttributesForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetAttributesForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetAttributesForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetAttributesForUserExResponse getAttributesForUserEx(
        @WebParam(partName = "parameters", name = "GetAttributesForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetAttributesForUserEx parameters
    );

    /**
     * This method provides a User ACL at level 3. Level 3 provides ACL information about the user, the organizations the user is assocaited with, and it includes the functions the user has access to through those organizations. It does not supply inforamtion about the data (Access Identifiers) associated with each funtion. See the method 'GetACLFunctionWithAccessIdsForUser' to include the data. A complete or partial list of functions can be requested. It is best to request only the portion of the ACL you actually need. To limit the ACL's content you can provide an Entity Gen Key, an Origin Gen Key, and/or a System Application ID. When not limiting the ACL by any or all of these values supply a zero for the value. The zero will indicate that you do not want to limit by that value.
     */
    @WebMethod(operationName = "GetACLFunctionsForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetACLFunctionsForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLFunctionsForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLFunctionsForUserExResponse getACLFunctionsForUserEx(
        @WebParam(partName = "parameters", name = "GetACLFunctionsForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLFunctionsForUserEx parameters
    );

    /**
     * List Menu Templates for OriginGenKey and AkaName
     */
    @WebMethod(operationName = "GetUserMenus", action = "urn:Humana:WebSecurity:WebServices/GetUserMenus")
    @RequestWrapper(localName = "GetUserMenus", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserMenus")
    @ResponseWrapper(localName = "GetUserMenusResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserMenusResponse")
    @WebResult(name = "GetUserMenusResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetUserMenusResponse.GetUserMenusResult getUserMenus(
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey,
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "menuLevel", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuLevel,
        @WebParam(name = "menuGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuGenKey,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId
    );

    /**
     * This method will provide a list of Access Identifiers assigned to an organization. It allows you to limit the reply set based on Access ID type. NOTE: The method is not within the context of a specific user.
     */
    @WebMethod(operationName = "GetACLAccessIdsForEntity", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsForEntity")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsForEntityResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsForEntityResponse getACLAccessIdsForEntity(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsForEntity", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsForEntity parameters
    );

    /**
     * Retrieves the Segmented Access Identifiers for the given UserID and AccessIDTypeCode
     */
    @WebMethod(operationName = "GetSegmentedAccessIdentifiersForUser", action = "urn:Humana:WebSecurity:WebServices/GetSegmentedAccessIdentifiersForUser")
    @RequestWrapper(localName = "GetSegmentedAccessIdentifiersForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSegmentedAccessIdentifiersForUser")
    @ResponseWrapper(localName = "GetSegmentedAccessIdentifiersForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSegmentedAccessIdentifiersForUserResponse")
    @WebResult(name = "GetSegmentedAccessIdentifiersForUserResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public java.lang.String getSegmentedAccessIdentifiersForUser(
        @WebParam(name = "userID", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String userID,
        @WebParam(name = "accessIDType", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String accessIDType
    );

    /**
     * This method provides a list of functions that belong to a single System Application.
     */
    @WebMethod(operationName = "GetFunctionListForSystemApplication", action = "urn:Humana:WebSecurity:WebServices/GetFunctionListForSystemApplication")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetFunctionListForSystemApplicationResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetFunctionListForSystemApplicationResponse getFunctionListForSystemApplication(
        @WebParam(partName = "parameters", name = "GetFunctionListForSystemApplication", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetFunctionListForSystemApplication parameters
    );

    /**
     * Provides the same data as 'GetACLAccessIdsQualifiedForUser', but only allows limitation of response data based on function or menu template.
     */
    @WebMethod(operationName = "GetACLAccessIdsByKeyTypeForUser", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsByKeyTypeForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsByKeyTypeForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsByKeyTypeForUserResponse getACLAccessIdsByKeyTypeForUser(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsByKeyTypeForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsByKeyTypeForUser parameters
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.
     */
    @WebMethod(operationName = "IsUserAuthorizedBoolWithLogging", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedBoolWithLogging")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "IsUserAuthorizedBoolWithLoggingResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public IsUserAuthorizedBoolWithLoggingResponse isUserAuthorizedBoolWithLogging(
        @WebParam(partName = "parameters", name = "IsUserAuthorizedBoolWithLogging", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        IsUserAuthorizedBoolWithLogging parameters
    );

    /**
     * Provides complete level 4 ACL information for a specific User.
     */
    @WebMethod(operationName = "GetACLAccessIdsForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsForUserExResponse getACLAccessIdsForUserEx(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsForUserEx parameters
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOrigin
     */
    @WebMethod(operationName = "IsUserAuthorizedExBool", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedExBool")
    @RequestWrapper(localName = "IsUserAuthorizedExBool", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.IsUserAuthorizedExBool")
    @ResponseWrapper(localName = "IsUserAuthorizedExBoolResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.IsUserAuthorizedExBoolResponse")
    @WebResult(name = "IsUserAuthorizedExBoolResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public boolean isUserAuthorizedExBool(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "key", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String key,
        @WebParam(name = "keyType", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String keyType,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId
    );

    /**
     * Get User DTO
     */
    @WebMethod(operationName = "GetUserDTOEx", action = "urn:Humana:WebSecurity:WebServices/GetUserDTOEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserDTOExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserDTOExResponse getUserDTOEx(
        @WebParam(partName = "parameters", name = "GetUserDTOEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserDTOEx parameters
    );

    /**
     * This method is simular to 'GetACLMenusForUser'. The difference is in the output format. This method returns menus in XML format.
     */
    @WebMethod(operationName = "GetACLMenusForUserAsXMLEx", action = "urn:Humana:WebSecurity:WebServices/GetACLMenusForUserAsXMLEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLMenusForUserAsXMLExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLMenusForUserAsXMLExResponse getACLMenusForUserAsXMLEx(
        @WebParam(partName = "parameters", name = "GetACLMenusForUserAsXMLEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLMenusForUserAsXMLEx parameters
    );

    /**
     * List SystemApplicationAtrribute for the SystemApplicationID
     */
    @WebMethod(operationName = "GetSystemApplicationAttributeRow", action = "urn:Humana:WebSecurity:WebServices/GetSystemApplicationAttributeRow")
    @RequestWrapper(localName = "GetSystemApplicationAttributeRow", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSystemApplicationAttributeRow")
    @ResponseWrapper(localName = "GetSystemApplicationAttributeRowResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSystemApplicationAttributeRowResponse")
    @WebResult(name = "GetSystemApplicationAttributeRowResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetSystemApplicationAttributeRowResponse.GetSystemApplicationAttributeRowResult getSystemApplicationAttributeRow(
        @WebParam(name = "systemApplicationId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int systemApplicationId,
        @WebParam(name = "attributeNbr", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int attributeNbr
    );

    /**
     * This method provides a level 1 ACL. Level 1 contains the user's demographic information. This method provides that information using the User Id as input. If all you know about this user is their AKA Name, see 'GetUserDemographicsByAkaName' to obtain this same information.
     */
    @WebMethod(operationName = "GetUserDemographicsByUserIdEx", action = "urn:Humana:WebSecurity:WebServices/GetUserDemographicsByUserIdEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserDemographicsByUserIdExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserDemographicsByUserIdExResponse getUserDemographicsByUserIdEx(
        @WebParam(partName = "parameters", name = "GetUserDemographicsByUserIdEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserDemographicsByUserIdEx parameters
    );

    /**
     * This method will provide a list of Access Identifiers assigned to an organization. It allows you to limit the reply set based on Access ID type. NOTE: The method is not within the context of a specific user. Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOrigin
     */
    @WebMethod(operationName = "GetACLAccessIdsForEntityEx", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsForEntityEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsForEntityExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsForEntityExResponse getACLAccessIdsForEntityEx(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsForEntityEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsForEntityEx parameters
    );

    /**
     * Retrieves SystemNotifications
     */
    @WebMethod(operationName = "GetSystemNotifications", action = "urn:Humana:WebSecurity:WebServices/GetSystemNotifications")
    @RequestWrapper(localName = "GetSystemNotifications", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSystemNotifications")
    @ResponseWrapper(localName = "GetSystemNotificationsResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetSystemNotificationsResponse")
    @WebResult(name = "GetSystemNotificationsResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetSystemNotificationsResponse.GetSystemNotificationsResult getSystemNotifications(
        @WebParam(name = "userTypeCd", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int userTypeCd,
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey,
        @WebParam(name = "entityTypeCd", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int entityTypeCd,
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOrigin
     */
    @WebMethod(operationName = "IsUserAuthorizedEx", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "IsUserAuthorizedExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public IsUserAuthorizedExResponse isUserAuthorizedEx(
        @WebParam(partName = "parameters", name = "IsUserAuthorizedEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        IsUserAuthorizedEx parameters
    );

    /**
     * Retrieves Entities for the Specified User
     */
    @WebMethod(operationName = "GetUserEntityList", action = "urn:Humana:WebSecurity:WebServices/GetUserEntityList")
    @RequestWrapper(localName = "GetUserEntityList", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserEntityList")
    @ResponseWrapper(localName = "GetUserEntityListResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserEntityListResponse")
    @WebResult(name = "GetUserEntityListResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetUserEntityListResponse.GetUserEntityListResult getUserEntityList(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "businessFunctionGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int businessFunctionGenKey,
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId
    );

    /**
     * This method will provide a list of users that have a current association with an organization. Please NOTE: It does not return a user whose access has been revoked.
     */
    @WebMethod(operationName = "GetActiveUsersForEntity", action = "urn:Humana:WebSecurity:WebServices/GetActiveUsersForEntity")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetActiveUsersForEntityResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetActiveUsersForEntityResponse getActiveUsersForEntity(
        @WebParam(partName = "parameters", name = "GetActiveUsersForEntity", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetActiveUsersForEntity parameters
    );

    /**
     * This method will provide a list of organizations that have a an association with this user. Please NOTE: It does not return an organization if they have revoked this user's access.
     */
    @WebMethod(operationName = "GetOrganizationListForUser", action = "urn:Humana:WebSecurity:WebServices/GetOrganizationListForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetOrganizationListForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetOrganizationListForUserResponse getOrganizationListForUser(
        @WebParam(partName = "parameters", name = "GetOrganizationListForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetOrganizationListForUser parameters
    );

    /**
     * Retrieves PortOfOrigin for the given originGenKey
     */
    @WebMethod(operationName = "GetPortOfOrigin", action = "urn:Humana:WebSecurity:WebServices/GetPortOfOrigin")
    @RequestWrapper(localName = "GetPortOfOrigin", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetPortOfOrigin")
    @ResponseWrapper(localName = "GetPortOfOriginResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetPortOfOriginResponse")
    @WebResult(name = "GetPortOfOriginResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetPortOfOriginResponse.GetPortOfOriginResult getPortOfOrigin(
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey
    );

    /**
     * Provides the same data as 'GetACLAccessIdsQualifiedForUser', but only allows limitation of response data based on function or menu template. Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOrigin
     */
    @WebMethod(operationName = "GetACLAccessIdsByKeyTypeForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsByKeyTypeForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsByKeyTypeForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsByKeyTypeForUserExResponse getACLAccessIdsByKeyTypeForUserEx(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsByKeyTypeForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsByKeyTypeForUserEx parameters
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.
     */
    @WebMethod(operationName = "IsUserAuthorized", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorized")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "IsUserAuthorizedResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public IsUserAuthorizedResponse isUserAuthorized(
        @WebParam(partName = "parameters", name = "IsUserAuthorized", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        IsUserAuthorized parameters
    );

    /**
     * List Menu Templates for MenuGenKey and BusinessFunctionGenKey
     */
    @WebMethod(operationName = "GetMenuItemDetails", action = "urn:Humana:WebSecurity:WebServices/GetMenuItemDetails")
    @RequestWrapper(localName = "GetMenuItemDetails", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetMenuItemDetails")
    @ResponseWrapper(localName = "GetMenuItemDetailsResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetMenuItemDetailsResponse")
    @WebResult(name = "GetMenuItemDetailsResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetMenuItemDetailsResponse.GetMenuItemDetailsResult getMenuItemDetails(
        @WebParam(name = "menuGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuGenKey,
        @WebParam(name = "businessFunctionGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int businessFunctionGenKey
    );

    /**
     * Retrieves GetAccessIdentEntityAssoc for given AccessID
     */
    @WebMethod(operationName = "GetAccessIdentEntityAssoc", action = "urn:Humana:WebSecurity:WebServices/GetAccessIdentEntityAssoc")
    @RequestWrapper(localName = "GetAccessIdentEntityAssoc", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAccessIdentEntityAssoc")
    @ResponseWrapper(localName = "GetAccessIdentEntityAssocResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAccessIdentEntityAssocResponse")
    @WebResult(name = "GetAccessIdentEntityAssocResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetAccessIdentEntityAssocResponse.GetAccessIdentEntityAssocResult getAccessIdentEntityAssoc(
        @WebParam(name = "accessId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String accessId,
        @WebParam(name = "accessIdTypeCd", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String accessIdTypeCd
    );

    /**
     * Retrieves Entity Addresses for the given entityGenKey and originGenKey
     */
    @WebMethod(operationName = "GetEntityAddresses", action = "urn:Humana:WebSecurity:WebServices/GetEntityAddresses")
    @RequestWrapper(localName = "GetEntityAddresses", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetEntityAddresses")
    @ResponseWrapper(localName = "GetEntityAddressesResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetEntityAddressesResponse")
    @WebResult(name = "GetEntityAddressesResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetEntityAddressesResponse.GetEntityAddressesResult getEntityAddresses(
        @WebParam(name = "entityGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int entityGenKey,
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey
    );

    /**
     * This method is simular to 'GetOrganizationListForUser'. The difference is that with this method you can limit the organizations lists by including a menu template or business function in your request. When that is done, the reply set will only include organizations that have given this user permission to perform that business function or menu template.
     */
    @WebMethod(operationName = "GetOrgListQualifiedForUser", action = "urn:Humana:WebSecurity:WebServices/GetOrgListQualifiedForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetOrgListQualifiedForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetOrgListQualifiedForUserResponse getOrgListQualifiedForUser(
        @WebParam(partName = "parameters", name = "GetOrgListQualifiedForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetOrgListQualifiedForUser parameters
    );

    /**
     * This method is simular to 'GetACLMenusForUser'. The difference is in the output format. This method returns menus in XML format.
     */
    @WebMethod(operationName = "GetACLMenusForUserAsXML", action = "urn:Humana:WebSecurity:WebServices/GetACLMenusForUserAsXML")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLMenusForUserAsXMLResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLMenusForUserAsXMLResponse getACLMenusForUserAsXML(
        @WebParam(partName = "parameters", name = "GetACLMenusForUserAsXML", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLMenusForUserAsXML parameters
    );

    /**
     * Provides level 4 ACL information for a specific user. The method supports limiting the response set based on Organization or function.
     */
    @WebMethod(operationName = "GetACLAccessIdsQualifiedForUser", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsQualifiedForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsQualifiedForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsQualifiedForUserResponse getACLAccessIdsQualifiedForUser(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsQualifiedForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsQualifiedForUser parameters
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.
     */
    @WebMethod(operationName = "IsUserAuthorizedWithLogging", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedWithLogging")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "IsUserAuthorizedWithLoggingResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public IsUserAuthorizedWithLoggingResponse isUserAuthorizedWithLogging(
        @WebParam(partName = "parameters", name = "IsUserAuthorizedWithLogging", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        IsUserAuthorizedWithLogging parameters
    );

    /**
     * This method provides a level 1 ACL. Level 1 contains the user's demographic information. This method provides that information using the User Id as input. If all you know about this user is their AKA Name, see 'GetUserDemographicsByAkaName' to obtain this same information.
     */
    @WebMethod(operationName = "GetUserDemographicsByUserId", action = "urn:Humana:WebSecurity:WebServices/GetUserDemographicsByUserId")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserDemographicsByUserIdResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserDemographicsByUserIdResponse getUserDemographicsByUserId(
        @WebParam(partName = "parameters", name = "GetUserDemographicsByUserId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserDemographicsByUserId parameters
    );

    /**
     * This web method is simular to the method 'GetACLFunctionsForUser' in that it supplies the same level 1, level 2 and level 3 information. However, it expands the reply to include level 4 information which represents data (Access Identifiers) for each function. In addition to being able to limit the reply data by Entity, Portal, or System Application, you can futher limit the reply to data about just one function.
     */
    @WebMethod(operationName = "GetACLFunctionWithAccessIdsForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetACLFunctionWithAccessIdsForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLFunctionWithAccessIdsForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLFunctionWithAccessIdsForUserExResponse getACLFunctionWithAccessIdsForUserEx(
        @WebParam(partName = "parameters", name = "GetACLFunctionWithAccessIdsForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLFunctionWithAccessIdsForUserEx parameters
    );

    /**
     * Provides level 4 ACL information for a specific user. The method supports limiting the response set based on Organization or function.
     */
    @WebMethod(operationName = "GetACLAccessIdsQualifiedForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsQualifiedForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsQualifiedForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsQualifiedForUserExResponse getACLAccessIdsQualifiedForUserEx(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsQualifiedForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsQualifiedForUserEx parameters
    );

    /**
     * Retrieves User Attributes for the given akaName and attrIdentifier
     */
    @WebMethod(operationName = "GetUserAttributes", action = "urn:Humana:WebSecurity:WebServices/GetUserAttributes")
    @RequestWrapper(localName = "GetUserAttributes", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserAttributes")
    @ResponseWrapper(localName = "GetUserAttributesResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserAttributesResponse")
    @WebResult(name = "GetUserAttributesResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetUserAttributesResponse.GetUserAttributesResult getUserAttributes(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "attrIdentifier", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String attrIdentifier
    );

    /**
     * Returns a Boolean flag indicating if the User is Authorized for a certain Menu Template or Business Function.Possible options for KeyType are :AccessIdTypeCodeBusinessFunctionEntityMenuTemplatePortOfOriginApplicationNameEAPM ID
     */
    @WebMethod(operationName = "IsUserAuthorizedWithLoggingEx", action = "urn:Humana:WebSecurity:WebServices/IsUserAuthorizedWithLoggingEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "IsUserAuthorizedWithLoggingExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public IsUserAuthorizedWithLoggingExResponse isUserAuthorizedWithLoggingEx(
        @WebParam(partName = "parameters", name = "IsUserAuthorizedWithLoggingEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        IsUserAuthorizedWithLoggingEx parameters
    );

    /**
     * This method is used to obtain a list of user attributes. Within our current implementation, there are no user attributes currently being stored in the Secured Logons database. As a result, this method will always return zero attributes. If any attributes are ever added to the Secured Logons database, this method would return them.
     */
    @WebMethod(operationName = "GetAttributesForUser", action = "urn:Humana:WebSecurity:WebServices/GetAttributesForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetAttributesForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetAttributesForUserResponse getAttributesForUser(
        @WebParam(partName = "parameters", name = "GetAttributesForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetAttributesForUser parameters
    );

    /**
     * This method provides a level 1 ACL. Level 1 contains the user's demographic information. This method provides that information using the AKA Name as input. If all you know about this user is their User ID, see 'GetUserDemographicsByUserId' to obtain this same information.
     */
    @WebMethod(operationName = "GetUserDemographicsByAkaNameEx", action = "urn:Humana:WebSecurity:WebServices/GetUserDemographicsByAkaNameEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserDemographicsByAkaNameExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserDemographicsByAkaNameExResponse getUserDemographicsByAkaNameEx(
        @WebParam(partName = "parameters", name = "GetUserDemographicsByAkaNameEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserDemographicsByAkaNameEx parameters
    );

    /**
     * List AccessIdentifier, AccessIdentifierType, OragnizationName for AccessID, UserName, EntityName
     */
    @WebMethod(operationName = "GetAccessIDsForCCRs", action = "urn:Humana:WebSecurity:WebServices/GetAccessIDsForCCRs")
    @RequestWrapper(localName = "GetAccessIDsForCCRs", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAccessIDsForCCRs")
    @ResponseWrapper(localName = "GetAccessIDsForCCRsResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAccessIDsForCCRsResponse")
    @WebResult(name = "GetAccessIDsForCCRsResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetAccessIDsForCCRsResponse.GetAccessIDsForCCRsResult getAccessIDsForCCRs(
        @WebParam(name = "accessID", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String accessID,
        @WebParam(name = "userLastName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String userLastName,
        @WebParam(name = "userFirstName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String userFirstName,
        @WebParam(name = "entityName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String entityName,
        @WebParam(name = "caLastName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String caLastName
    );

    /**
     * Provides complete level 4 ACL information for a specific User.
     */
    @WebMethod(operationName = "GetACLAccessIdsForUser", action = "urn:Humana:WebSecurity:WebServices/GetACLAccessIdsForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLAccessIdsForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLAccessIdsForUserResponse getACLAccessIdsForUser(
        @WebParam(partName = "parameters", name = "GetACLAccessIdsForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLAccessIdsForUser parameters
    );

    /**
     * This method returns menu template information for a given user. The reply information can be limited by Orginization, Portal, System Application or Menu Template.
     */
    @WebMethod(operationName = "GetACLMenusForUserEx", action = "urn:Humana:WebSecurity:WebServices/GetACLMenusForUserEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLMenusForUserExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLMenusForUserExResponse getACLMenusForUserEx(
        @WebParam(partName = "parameters", name = "GetACLMenusForUserEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLMenusForUserEx parameters
    );

    /**
     * Retrieves Access Identifiers
     */
    @WebMethod(operationName = "GetAccessIdentifiers", action = "urn:Humana:WebSecurity:WebServices/GetAccessIdentifiers")
    @RequestWrapper(localName = "GetAccessIdentifiers", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAccessIdentifiers")
    @ResponseWrapper(localName = "GetAccessIdentifiersResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetAccessIdentifiersResponse")
    @WebResult(name = "GetAccessIdentifiersResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetAccessIdentifiersResponse.GetAccessIdentifiersResult getAccessIdentifiers(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "entityGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int entityGenKey,
        @WebParam(name = "idType", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String idType,
        @WebParam(name = "businessFunctionGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int businessFunctionGenKey,
        @WebParam(name = "menuGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuGenKey,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId
    );

    /**
     * This method provides a User ACL at level 3. Level 3 provides ACL information about the user, the organizations the user is assocaited with, and it includes the functions the user has access to through those organizations. It does not supply inforamtion about the data (Access Identifiers) associated with each funtion. See the method 'GetACLFunctionWithAccessIdsForUser' to include the data. A complete or partial list of functions can be requested. It is best to request only the portion of the ACL you actually need. To limit the ACL's content you can provide an Entity Gen Key, an Origin Gen Key, and/or a System Application ID. When not limiting the ACL by any or all of these values supply a zero for the value. The zero will indicate that you do not want to limit by that value.
     */
    @WebMethod(operationName = "GetACLFunctionsForUser", action = "urn:Humana:WebSecurity:WebServices/GetACLFunctionsForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetACLFunctionsForUserResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetACLFunctionsForUserResponse getACLFunctionsForUser(
        @WebParam(partName = "parameters", name = "GetACLFunctionsForUser", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetACLFunctionsForUser parameters
    );

    /**
     * Retrieves Entity Type for the given entityGenKey and originGenKey
     */
    @WebMethod(operationName = "GetEntityType", action = "urn:Humana:WebSecurity:WebServices/GetEntityType")
    @RequestWrapper(localName = "GetEntityType", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetEntityType")
    @ResponseWrapper(localName = "GetEntityTypeResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetEntityTypeResponse")
    @WebResult(name = "GetEntityTypeResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetEntityTypeResponse.GetEntityTypeResult getEntityType(
        @WebParam(name = "entityGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int entityGenKey,
        @WebParam(name = "originGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int originGenKey
    );

    /**
     * This method obtains the demographic data for organization
     */
    @WebMethod(operationName = "GetDemographicsForEntity", action = "urn:Humana:WebSecurity:WebServices/GetDemographicsForEntity")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetDemographicsForEntityResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetDemographicsForEntityResponse getDemographicsForEntity(
        @WebParam(partName = "parameters", name = "GetDemographicsForEntity", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetDemographicsForEntity parameters
    );

    /**
     * Retrieves User EntitySegment list for the given akaName, businessFunctionGenKey and menuGenKey
     */
    @WebMethod(operationName = "GetUserEntitySegmentList", action = "urn:Humana:WebSecurity:WebServices/GetUserEntitySegmentList")
    @RequestWrapper(localName = "GetUserEntitySegmentList", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserEntitySegmentList")
    @ResponseWrapper(localName = "GetUserEntitySegmentListResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserEntitySegmentListResponse")
    @WebResult(name = "GetUserEntitySegmentListResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetUserEntitySegmentListResponse.GetUserEntitySegmentListResult getUserEntitySegmentList(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "businessFunctionGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int businessFunctionGenKey,
        @WebParam(name = "menuGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuGenKey
    );

    /**
     * Retrieves Function Access for the given AkaName, ApplicationID and SessionID
     */
    @WebMethod(operationName = "GetUserFunctionAccess", action = "urn:Humana:WebSecurity:WebServices/GetUserFunctionAccess")
    @RequestWrapper(localName = "GetUserFunctionAccess", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserFunctionAccess")
    @ResponseWrapper(localName = "GetUserFunctionAccessResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetUserFunctionAccessResponse")
    @WebResult(name = "GetUserFunctionAccessResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetUserFunctionAccessResponse.GetUserFunctionAccessResult getUserFunctionAccess(
        @WebParam(name = "akaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String akaName,
        @WebParam(name = "applicationID", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int applicationID,
        @WebParam(name = "sessionId", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        java.lang.String sessionId
    );

    /**
     * Get User Agreements from AkaName
     */
    @WebMethod(operationName = "GetUserAgreements", action = "urn:Humana:WebSecurity:WebServices/GetUserAgreements")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserAgreementsResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserAgreementsResponse getUserAgreements(
        @WebParam(partName = "parameters", name = "GetUserAgreements", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserAgreements parameters
    );

    /**
     * This method provides a level 1 ACL. Level 1 contains the user's demographic information. This method provides that information using the AKA Name as input. If all you know about this user is their User ID, see 'GetUserDemographicsByUserId' to obtain this same information.
     */
    @WebMethod(operationName = "GetUserDemographicsByAkaName", action = "urn:Humana:WebSecurity:WebServices/GetUserDemographicsByAkaName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetUserDemographicsByAkaNameResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetUserDemographicsByAkaNameResponse getUserDemographicsByAkaName(
        @WebParam(partName = "parameters", name = "GetUserDemographicsByAkaName", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetUserDemographicsByAkaName parameters
    );

    /**
     * List Menu Templates for Port Of Origin
     */
    @WebMethod(operationName = "GetPortOfOriginMenus", action = "urn:Humana:WebSecurity:WebServices/GetPortOfOriginMenus")
    @RequestWrapper(localName = "GetPortOfOriginMenus", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetPortOfOriginMenus")
    @ResponseWrapper(localName = "GetPortOfOriginMenusResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", className = "humana.websecurity.webservices.GetPortOfOriginMenusResponse")
    @WebResult(name = "GetPortOfOriginMenusResult", targetNamespace = "urn:Humana:WebSecurity:WebServices")
    public humana.websecurity.webservices.GetPortOfOriginMenusResponse.GetPortOfOriginMenusResult getPortOfOriginMenus(
        @WebParam(name = "portOfOrigin", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int portOfOrigin,
        @WebParam(name = "menuLevel", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuLevel,
        @WebParam(name = "menuGenKey", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        int menuGenKey
    );

    /**
     * This method provides a way to locate what organizations are assocaited with a given Access Identifier. When using this method, be prepared to handle a list of organizations. Do not assume you will only get one.
     */
    @WebMethod(operationName = "GetEntityFromAssignedAccessIdEx", action = "urn:Humana:WebSecurity:WebServices/GetEntityFromAssignedAccessIdEx")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetEntityFromAssignedAccessIdExResponse", targetNamespace = "urn:Humana:WebSecurity:WebServices", partName = "parameters")
    public GetEntityFromAssignedAccessIdExResponse getEntityFromAssignedAccessIdEx(
        @WebParam(partName = "parameters", name = "GetEntityFromAssignedAccessIdEx", targetNamespace = "urn:Humana:WebSecurity:WebServices")
        GetEntityFromAssignedAccessIdEx parameters
    );
}
